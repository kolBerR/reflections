How did viewing a diff between two versions of a file help you see the bug that was introduced?
 --> Viewing a diff between two versions of a file allows me to quickly pinpoint/ debug any program with ease. Even without knowing the line number for the error, I can take, for example, a typo within my code and search for it in the file through my text editor. There, I would find the typo and quickly fix the bug. 

 How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
 --> Having easy access to the entire history of a file will make me a more efficient programmer by giving me a full scope of my code at hand in the need of revisiting old versions. Sometimes I may want to use an older feature or perhaps have a few errors in my code and I want to revert back to a previous version. Having that history will give me access to different versions of the code when needed. 

 What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
 -- The pros for committing manually in git keep in sure that each one is for some logical reason and meaningful purpose. For versions automatically saved, the pros could be having the files at hand during certain time frames when you need them. The cons for manually committing changes is the tedious workload you'll have to go through, plus knowing/ understanding whether the commit is actually pertaining to anything (logically). For automatic version control, the cons would be saving so many versions of one file could be burdonsome, while having taken up so much unecessary space, plus certain versions could be useless depending on the time when the code was made.

 Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately? 
 --> Version control systems such as git allow saving multiple files in one commit to give ease to the developer, as well as save time. For files that depend on other files within a program, for example, an index, css and js file to compose web pages, saving in one commit would be logical and better, with less clutter for the git log. Google Docs, on the other hand, may choose to treat the files seperately as the versions saved throghout the duration of a project is dependent on the time set.

 How can you use the commands git log and git diff to view the history of files?
  --> You can use the commands git log and git diff to view the history of files by accessing the commit's ID number from the git log and seeing the differences between two commits using the git diff, which details the differences between the two versions of the file. 

  How might using version control make you more confident to make changes that could break something?
   --> Using version control can make me a more confident developer when making changes that could possibly break something by allowing me to id certain versions of my code manually at any time to efficiently debug features that may have caused problems or need changing. 

Now that you have your workspace set up, what do you want to try using Git for?
 --> I'd like to use Git for saving versions of my web projects and pretty much any application/ code I'm working on for now on! Git helps me to utilize past versions of my code whenever needed, and allows for some other cool features that'll make working on projects really efficient and fun!

 
